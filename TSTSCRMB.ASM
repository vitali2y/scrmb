;[]*****************************************************[]
;[]							[]
;[]  Тестирование  скремблера  телефонных  разговоров	[]
;[]		TSTSCRMB.ASM	Версия  1.7		[]
;[]							[]
;[]	      (c)  Ермоленко  Виталий,  1992-93 	[]
;[]							[]
;[]*****************************************************[]

		list	on
		ttl	TSTSCRMB 1.7: тестирование скремблера телефонных разговоров

; EMULATOR	equ	0			; объявлено - работа с эмулятором / иначе - реальный режим

;*------------------------------------------------------*
;|	Частота кварцевого резонатора при работе с эму- |
;| лятором - 6 МГц, для рабочей платы - 12.1 МГц	|
;|	Частота дискр-ции в прозрачн. режиме - 10 кГц   |
;|	Период пилы - ў7.2 мс				|
;|	Частота синусоиды для эмулятора - ў200 Гц, в	|
;| рабочей плате - ў440 Гц				|
;*------------------------------------------------------*

wCODESEG	equ	0000h			; кодовый сегмент ( 8000h)
wADCDACSEG	equ	2000h			; сегмент АЦП/ЦАП (0A000h)
wDATA1SEG	equ	4000h			; сегмент данных  (0C000h)
wDATA2SEG	equ	6000h			; сегмент данных  (0E000h)
bCYCLE		equ	100			; период в мкс

;[]*****************************************************[]
;[]	     Описание  используемых  переменных		[]
;[]*****************************************************[]
biDam		reg	p1.0			; выбор УВХ
biAdc		reg	p1.1			; выбор АЦП
biChan0		reg	p1.5			; выбор канала: микрофон
biChan1		reg	p1.3			; выбор канала: входн. линия
biAdcRdy	reg	p1.4			; готовность АЦП
biSelDrv	reg	p1.7			; выбор ИМС
biWaitButton	reg	p3.5		;" p3.0	; бит ожидания нажатия кнопки
biCtrl		reg	p3.1			; контрол. выход
biErr		reg	p3.5			; выход ошибки

		org     wCODESEG
;[]*****************************************************[]
;[]		       Холодный  старт			[]
;[]*****************************************************[]
		jmp	Begin

		org	wCODESEG + 0Bh
;[]*****************************************************[]
;[]	     Вектор  прерывания  от  таймера  0		[]
;[]*****************************************************[]
		jmp	IntTimer0

		org	wCODESEG + 1Bh
;[]*****************************************************[]
;[]	     Вектор  прерывания  от  таймера  1		[]
;[]*****************************************************[]
		jmp	IntTimer1

AddrTitle	equ	$ + (10h - ($ & 0fh))
;[]*****************************************************[]
;[] 		   Информация  о  версии		[]
;[]*****************************************************[]
		org	AddrTitle
		db	'+- - - - - - - +'
		db	'| TSTSCRMB 1.7 |'
		db	'|    9-VI-93   |'
		db	'+- - - - - - - +'

NotEqualROM:	setb	biErr			; 1 строб ошибки ППЗУ
		nop
		nop
		clr	biErr
		sjmp	ContROM
NotEqualRAM:	setb	biErr                   ; 2 строба ошибки ОЗУ
		nop
		nop
		clr	biErr
		nop
		setb	biErr
		nop
		nop
		clr	biErr
		sjmp	ContRAM

;[]*****************************************************[]
;[]		 Точка  входа  в  программу		[]
;[]*****************************************************[]
Begin:		mov	sp, #60h

		ifndef	EMULATOR
		call	Delay2Sec
		endif

;[]*****************************************************[]
;[]	   Проверка  шины  данных  (бегущий  0)		[]
;[]		      Номер теста - 1			[]
;[]*****************************************************[]
		mov	b,    #11111110b
		mov	dptr, #wDATA1SEG
VrfBus:		mov	a,    #01h
		call	CtrlNumTst
		mov	a, b
		movx	@dptr, a		; выдача контрол. кода
		rr	a
		mov	b, a
		jb	biWaitButton, VrfBus	; нажата кнопка?

		ifndef	EMULATOR
		call	Delay2Sec
		endif

		setb	biWaitButton

;[]*****************************************************[]
;[]	    Проверка  обращения  к  ВПП  и  ВПД		[]
;[]		      Номер теста - 2			[]
;[]*****************************************************[]
ReadROMRAM:	mov	a,    #02h
		call	CtrlNumTst
		mov	dptr, #AddrTitle
		clr	a
		movc	a, @a+dptr		; чтение контрол. байта из ВПП
		cjne	a, #'+', NotEqualROM
ContROM:	mov	a, b
		mov	dptr, #wDATA1SEG
		movx	@dptr, a
		movx	a, @dptr		; чтение записан. байта ВПД
		cjne	a, b, NotEqualRAM
ContRAM:	inc	b			; подготовить след. значение
		mov	a,    #10
		djnz	a, $
		jb	biWaitButton, ReadROMRAM

		ifndef	EMULATOR
		call	Delay2Sec
		endif

		setb	biWaitButton

;[]*****************************************************[]
;[]	     Выдача  пилы  в  телефон  и  линию		[]
;[]		     Номер теста - 3			[]
;[]*****************************************************[]
ContOutPhone:   mov	a, #03h
		call	CtrlNumTst
		inc	b			; выдавать следующ. значение
		mov	a, b
		call	OutPhone
		call	OutLink
		jb	biWaitButton, ContOutPhone

		ifndef	EMULATOR
		call	Delay2Sec
		endif

		setb	biWaitButton

;[]*****************************************************[]
;[]    Синус -> линия -> линия -> память -> телефон	[]
;[]		       Номер теста - 4			[]
;[]*****************************************************[]
OutSin1:        mov	a,    #04h
		call	CtrlNumTst
		call	Sine
		call	OutLink
		call	InLink
		mov	dptr, #wDATA1SEG
		movx	@dptr, a
		movx	a, @dptr
		call	OutPhone
		jb	biWaitButton, OutSin1

		ifndef	EMULATOR
		call	Delay2Sec
		endif

		setb	biWaitButton

;[]*****************************************************[]
;[]   Синус -> телефон -> микрофон -> память -> линия   []
;[]		       Номер теста - 5			[]
;[]*****************************************************[]
OutSin2:	mov	a,    #05h
		call	CtrlNumTst
		call	Sine
		call	OutPhone
		call	InPhone
		mov	dptr, #wDATA1SEG
		movx	@dptr, a
		movx	a, @dptr
		call	OutLink
		jb	biWaitButton, OutSin2

		ifndef	EMULATOR
		call	Delay2Sec
		endif

		setb	biWaitButton

;[]*****************************************************[]
;[]	   Микрофон -> телефон  (прозрачн.  режим)	[]
;[]		       Номер теста - 6			[]
;[]*****************************************************[]
		mov	tmod, #00100010b	; режим 2 для таймеров 0 & 1
		mov	th0,  #(0FFh - bCYCLE)
		orl	ie,   #10000010b	; разрешение прерываний от таймера 0
		setb	tr0 			; запуск таймера 0
		jb	biWaitButton, $
		clr	tr0			; останов таймера 0
		clr	et0			; запрещение прерываний от таймера 0

		ifndef	EMULATOR
		call	Delay2Sec
		endif

		setb	biWaitButton

;[]*****************************************************[]
;[]		Связь  с  другим  абонентом		[]
;[]		       Номер теста - 7			[]
;[]*****************************************************[]
		mov	th1, #(0FFh - bCYCLE)
		setb	tr1 			; запуск таймера 1
		setb	et1			; разрещение прерываний от таймера 1
		sjmp	$			; вечный цикл

;[]*****************************************************[]
;[]	  Обработчик  прерывания  от  таймера  0	[]
;[]*****************************************************[]
IntTimer0:	call	InPhone
		call	OutPhone
		mov	a, #06h
		call	CtrlNumTst
		reti

;[]*****************************************************[]
;[]	  Обработчик  прерывания  от  таймера  1	[]
;[]*****************************************************[]
IntTimer1:      call	InLink
		call	OutPhone
		call	InPhone
		call	OutLink
		mov	a, #07h
		call	CtrlNumTst
		reti

;[]*****************************************************[]
;[]    Sine:  получение  очередного  значения  синуса	[]
;[]		   Вход: r7 - значение угла		[]
;[]		  Выход: a - значение синуса		[]
;[]*****************************************************[]
Sine:		cjne	r7, #20, NoRstAngl 	; угол больше 360°?
		mov	r7, #0
NoRstAngl:	mov	a, r7
		add	a,  #(EndDiff - BegDiff); коррекция для извлечения синуса
		cjne	a, #10 + (EndDiff-BegDiff), VrfAngl
VrfAngl:	jc	Less180			; угол больше 180°?
		subb	a,  #10
Less180:        movc	a, @a+pc		; получение значения синуса

BegDiff		equ	$
		cjne	r7, #10, VrfSin
VrfSin:		jc	CorrSin
		cpl	a			; инверс. зн-ние для угла больше 180°
NoUpdSin:	inc	r7			; подготовить след. значение
		ret
CorrSin:        sjmp	NoUpdSin
EndDiff		equ	$

;[]*****************************************************[]
;[]		      Таблица  синусов			[]
;[]*****************************************************[]
		;	9°    27°   45°   63°   81°   99°   117°  135°  153°  171°
		db	08Dh, 0A7h, 0BEh, 0CFh, 0D7h, 0D7h, 0CFh, 0BEh, 0A7h, 08Dh

;[]*****************************************************[]
;[] 	      InPhone:  чтение  из  микрофона		[]
;[]		  Выход: a - принятый байт		[]
;[]*****************************************************[]
InPhone:        setb	biChan1
		clr	biChan0			; скоммутировать канал микрофона
		setb	biDam			; УВХ: пропустить сигнал
		mov	dptr, #wADCDACSEG

		ifndef	EMULATOR
		nop
		nop
		nop
		nop
		endif

		clr	biDam			; УВХ: фиксирование сигнала
		clr	biAdc			; запуск АЦП
		jb	biAdcRdy, $		; ожидание измерения значения
		movx	a, @dptr		; чтение получен. значения
		setb	biAdc			; останов АЦП
		setb	biChan0
		ret

;[]*****************************************************[]
;[] 		 InLink:  чтение  из  линии		[]
;[]		  Выход: a - принятый байт		[]
;[]*****************************************************[]
InLink:		setb	biChan0
		clr	biChan1			; скоммутировать канал линии связи
		setb	biDam			; УВХ: пропустить сигнал
		mov	dptr, #wADCDACSEG

		ifndef	EMULATOR
		nop
		nop
		nop
		nop
		endif

		clr	biDam			; УВХ: фиксирование сигнала
		clr	biAdc			; запуск АЦП
		jb	biAdcRdy, $		; ожидание измерения значения
		movx	a, @dptr		; чтение получен. значения
		setb	biAdc			; останов АЦП
		setb	biChan1
		ret

;[]*****************************************************[]
;[]		OutPhone:  выдача  в  телефон		[]
;[]		 Вход: a - выдаваемый байт		[]
;[]*****************************************************[]
OutPhone:	clr	biSelDrv
		mov	dptr, #wADCDACSEG
		movx	@dptr, a		; выдача получен. значения
		ret

;[]*****************************************************[]
;[]		 OutLink:  выдача  в  линию		[]
;[]		 Вход: a - выдаваемый байт		[]
;[]*****************************************************[]
OutLink:	setb	biSelDrv
		mov	dptr, #wADCDACSEG
		movx	@dptr, a		; выдача получен. значения
		ret

;[]*****************************************************[]
;[]	 CtrlNumTst:  сообщение  о  номере  теста	[]
;[]		     Вход: a - номер теста		[]
;[]*****************************************************[]
CtrlNumTst:	setb	biCtrl			; контр. строб
		nop
		nop
		clr	biCtrl
		djnz	a, CtrlNumTst
		ret

		ifndef	EMULATOR
;[]*****************************************************[]
;[]		Delay2Sec:  задержка  ў2  сек		[]
;[]*****************************************************[]
Delay2Sec:	mov	r7, #(10 * 2)
Loop1:		mov	r5, #84
Loop2:		mov	r6, #236
		djnz	r6, $
		djnz	r5, Loop2
		djnz	r7, Loop1
		ret
		endif

		end
